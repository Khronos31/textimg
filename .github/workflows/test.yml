name: test

on:
  push:
    paths-ignore:
      - README*
      - LICENSE
  pull_request:
    paths-ignore:
      - README*
      - LICENSE

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Skip job"

  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "not contains '[skip ci]'"

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.15', '1.x' ]
    name: build go ${{ matrix.go }}
    needs: before
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - run: go build
      - run: go install

  format:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: '1.16'
      - name: Check code format
        run: |
          go build
          count="$(go fmt ./... | wc -l)"
          if [[ "$count" -ne 0 ]]; then
            echo "[ERR] 'go fmt ./...' してください" >&2
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - name: Tests
        run: make docker-test

  lint:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

  coverage:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - name: Build base image
        run: docker-compose run coverage
      - uses: codecov/codecov-action@v1
